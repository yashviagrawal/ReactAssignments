{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agrawy1\\\\OneDrive - Henkel\\\\Documents\\\\Workspace\\\\GitHub\\\\ReactAssignments\\\\TicTacToe-ts\\\\src\\\\TicTacToeGameComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TicTacToeGame from './TicTacToeGame';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst game = new TicTacToeGame();\nconst TicTacToeGameComponent = () => {\n  _s();\n  const [board, setBoard] = useState(game.getBoard());\n  const [winner, setWinner] = useState(null);\n  const handleCellClick = index => {\n    if (game.isGameOver() || !game.isCellEmpty(index)) {\n      return;\n    }\n    game.makeMove(index);\n    setBoard([...game.getBoard()]);\n    setWinner(game.getWinner());\n  };\n  const renderCell = index => {\n    const cellValue = board[index];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cell\",\n      onClick: () => handleCellClick(index),\n      children: cellValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  };\n  const renderStatus = () => {\n    if (winner) {\n      return `Winner: ${winner}`;\n    } else if (game.isGameOver()) {\n      return 'It\\'s a draw!';\n    } else {\n      return `Current player: ${game.getCurrentPlayer()}`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: board.map((_, index) => renderCell(index))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: renderStatus()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(TicTacToeGameComponent, \"jfM/c+cuG/r9AANqYHncLoDC2Rs=\");\n_c = TicTacToeGameComponent;\nexport default TicTacToeGameComponent;\nvar _c;\n$RefreshReg$(_c, \"TicTacToeGameComponent\");","map":{"version":3,"names":["React","useState","TicTacToeGame","jsxDEV","_jsxDEV","game","TicTacToeGameComponent","_s","board","setBoard","getBoard","winner","setWinner","handleCellClick","index","isGameOver","isCellEmpty","makeMove","getWinner","renderCell","cellValue","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","renderStatus","getCurrentPlayer","map","_","_c","$RefreshReg$"],"sources":["C:/Users/agrawy1/OneDrive - Henkel/Documents/Workspace/GitHub/ReactAssignments/TicTacToe-ts/src/TicTacToeGameComponent.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport TicTacToeGame, { Player } from './TicTacToeGame'; \r\n\r\n\r\nconst game = new TicTacToeGame();\r\n\r\nconst TicTacToeGameComponent: React.FC = () => {\r\n  const [board, setBoard] = useState(game.getBoard());\r\n  const [winner, setWinner] = useState<Player | null>(null);\r\n\r\n  const handleCellClick = (index: number) => {\r\n    if (game.isGameOver() || !game.isCellEmpty(index)) {\r\n      return;\r\n    }\r\n\r\n    game.makeMove(index);\r\n    setBoard([...game.getBoard()]);\r\n    setWinner(game.getWinner());\r\n  };\r\n\r\n  const renderCell = (index: number) => {\r\n    const cellValue = board[index];\r\n    return (\r\n      <div className=\"cell\" onClick={() => handleCellClick(index)}>\r\n        {cellValue}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderStatus = () => {\r\n    if (winner) {\r\n      return `Winner: ${winner}`;\r\n    } else if (game.isGameOver()) {\r\n      return 'It\\'s a draw!';\r\n    } else {\r\n      return `Current player: ${game.getCurrentPlayer()}`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"board\">\r\n        {board.map((_, index) => renderCell(index))}\r\n      </div>\r\n      <div className=\"status\">\r\n        {renderStatus()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TicTacToeGameComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAkB,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxD,MAAMC,IAAI,GAAG,IAAIH,aAAa,CAAC,CAAC;AAEhC,MAAMI,sBAAgC,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAACI,IAAI,CAACK,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAgB,IAAI,CAAC;EAEzD,MAAMY,eAAe,GAAIC,KAAa,IAAK;IACzC,IAAIT,IAAI,CAACU,UAAU,CAAC,CAAC,IAAI,CAACV,IAAI,CAACW,WAAW,CAACF,KAAK,CAAC,EAAE;MACjD;IACF;IAEAT,IAAI,CAACY,QAAQ,CAACH,KAAK,CAAC;IACpBL,QAAQ,CAAC,CAAC,GAAGJ,IAAI,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC9BE,SAAS,CAACP,IAAI,CAACa,SAAS,CAAC,CAAC,CAAC;EAC7B,CAAC;EAED,MAAMC,UAAU,GAAIL,KAAa,IAAK;IACpC,MAAMM,SAAS,GAAGZ,KAAK,CAACM,KAAK,CAAC;IAC9B,oBACEV,OAAA;MAAKiB,SAAS,EAAC,MAAM;MAACC,OAAO,EAAEA,CAAA,KAAMT,eAAe,CAACC,KAAK,CAAE;MAAAS,QAAA,EACzDH;IAAS;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAEV,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIjB,MAAM,EAAE;MACV,OAAQ,WAAUA,MAAO,EAAC;IAC5B,CAAC,MAAM,IAAIN,IAAI,CAACU,UAAU,CAAC,CAAC,EAAE;MAC5B,OAAO,eAAe;IACxB,CAAC,MAAM;MACL,OAAQ,mBAAkBV,IAAI,CAACwB,gBAAgB,CAAC,CAAE,EAAC;IACrD;EACF,CAAC;EAED,oBACEzB,OAAA;IAAKiB,SAAS,EAAC,MAAM;IAAAE,QAAA,gBACnBnB,OAAA;MAAKiB,SAAS,EAAC,OAAO;MAAAE,QAAA,EACnBf,KAAK,CAACsB,GAAG,CAAC,CAACC,CAAC,EAAEjB,KAAK,KAAKK,UAAU,CAACL,KAAK,CAAC;IAAC;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eACNvB,OAAA;MAAKiB,SAAS,EAAC,QAAQ;MAAAE,QAAA,EACpBK,YAAY,CAAC;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpB,EAAA,CA3CID,sBAAgC;AAAA0B,EAAA,GAAhC1B,sBAAgC;AA6CtC,eAAeA,sBAAsB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}